/*
    Software Security System
    Copyright (C) 2002 SCSS SPECTR  All Rights Reserved

    Security system basic object
*/

#ifndef __IBASE_H__
#define __IBASE_H__

/**
 * Базовый интерфейс. Все абстрактные интерфейсы в СЗИ обычно
 * являются производными от этого класса. Это позволяет осуществлять
 * некоторые базовые манипуляции с абстрактными обьектами невзирая
 * на их истинную сущность.
 */
class iBase
{
public:
  /**
   * Увеличить счетчик ссылок на данный обьект.
   * Каждый раз, когда мы копируем указатель на любой обьект для
   * длительного хранения, необходимо вызывать эту функцию для того,
   * чтобы обьект знал о том, что он все еще кому-то нужен. При этом
   * он не допустит своего разрушения до того, как счетчик ссылок
   * станет равным нулю.
   */
  virtual void IncRef () = 0;

  /**
   * Уменьшить счетчик ссылок на данный обьект.
   * Когда мы завершаем работу с некоторым обьектом, вместо деструктора
   * необходимо вызвать эту функцию. При достижении счетчиком ссылок нуля
   * обьект автоматически саморазрушится. Использование этого механизма
   * гарантирует недопущение разрушения обьекта до того, как он перестает
   * быть нужным.
   */
  virtual void DecRef () = 0;

  /**
   * Узнать количество ссылок на данный обьект.
   * Наличие этой функции не совсем оправдано, но иногда, возможно для
   * отладки, такая функция может понадобиться.
   */
  virtual int GetRefCount () = 0;
};

#define DECLARE_IBASE						\
  int scfRefCount;						\
  virtual void IncRef ();					\
  virtual void DecRef ();					\
  virtual int GetRefCount ();

#define IMPLEMENT_IBASE(class)					\
  void class::IncRef () { scfRefCount++; }			\
  void class::DecRef () { if (!--scfRefCount) delete this; }	\
  int class::GetRefCount () { return scfRefCount; }

#define CONSTRUCT_IBASE						\
  scfRefCount = 1;

#endif // __IBASE_H__
